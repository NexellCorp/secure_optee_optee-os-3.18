Makefile for HiKey board UEFI firmware/kernel

- Run 'make' to build the following images:
  LLOADER = l-loader/l-loader.bin with:
      [BL1 = arm-trusted-firmware/build/hikey/release/bl1.bin]
      [l-loader/*.S]
  PTABLE = l-loader/ptable.img
  FIP = arm-trusted-firmware/build/hikey/release/fip.bin with:
      [BL2 = arm-trusted-firmware/build/hikey/release/bl2.bin]
      [BL30 = mcuimage.bin]
      [BL31 = arm-trusted-firmware/build/hikey/release/bl31.bin]
      [BL32 = optee_os/out/arm-plat-hikey/core/tee.bin]
      [BL33 = edk2/Build/HiKey/RELEASE_GCC49/FV/BL33_AP_UEFI.fd]
  NVME = nvme.img
      [downloaded from GitHub]
  BOOT-IMG = boot.img
      [LINUX = linux/arch/arm64/boot/Image]
      [DTB = linux/arch/arm64/boot/dts/nexell/s5p6818-svt.dtb]
      [INITRAMFS = initramfs.cpio.gz]
          [gen_rootfs/busybox/*]
          [OPTEE-LINUXDRIVER = optee_linuxdriver/optee.ko optee_linuxdriver/optee_armtz.ko]
          [OPTEE-CLIENT = optee_client/out/libteec.so* optee_client/out/tee-supplicant/tee-supplicant]
          [OPTEE-TEST = out/usr/local/bin/xtest out/lib/optee_armtz/*.ta]
- 'make clean' removes most files generated by make, except the
downloaded files/tarballs and the directories they were
extracted to.
- 'make cleaner' also removes tar directories.
- 'make distclean' removes all generated or downloaded files.

Image files can be built separately with e.g., 'make build-fip'
or 'make build-bl1', and so on. Note: In order to speed up the 
build and reduce output when working on a single component,
build-<foo> will NOT invoke build-<bar>.
Therefore, if you want to make sure that <bar> is up-to-date,
use 'make build-<foo> build-<bar>'.
Plain 'make' or 'make all' do check all dependencies, however.

Flashing micro-howto:
  # Set J15 pins 1-2 closed 3-4 closed 5-6 open (recovery mode)
  sudo python burn-boot/hisi-idt.py -d /dev/HiKey --img1=l-loader/l-loader.bin
  fastboot flash ptable l-loader/ptable.img
  fastboot flash fastboot arm-trusted-firmware/build/hikey/release/fip.bin
  fastboot flash nvme nvme.img
  fastboot flash boot boot.img
  # Set J15 pins 1-2 closed 3-4 open 5-6 open (boot from eMMC)
